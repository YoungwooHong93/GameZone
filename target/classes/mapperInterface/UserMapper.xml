<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ** <mapper> => 최상위 태그 ** -->
<mapper namespace="mapperInterface.UserMapper">

	<!-- ***** SearchCriteria Page List ********************************* -->
	<sql id="search">
		<if test="keyword != null">
			<bind name="keyVal" value="'%' + keyword + '%'"/>
		</if>
		
		<choose>
			<when test="searchType == 'i'.toString()">
				and id like #{keyVal}) <!-- 컬럼명 같아야 됨 -->
			</when>
			
			<when test="searchType == 'a'.toString()">
				and user_name like #{keyVal})
			</when>
			
			<when test="searchType == 'b'.toString()">
				and birthday like #{keyVal})
			</when>
			
			<when test="searchType == 'in'.toString()">
				and id like #{keyVal}
				or user_name like #{keyVal})
			</when>
			
			<otherwise>
				)
			</otherwise>
		</choose>
	</sql>
	
	<select id="userList" resultType="vo.UserVO">
		select * from user 
		where (id != "admin" <include refid="search"></include>
		order by id asc
		limit #{sno}, #{rowsPerPage}
	</select>
	
	<select id="viewCount" resultType="int">
		select count(*) from user
		where (id != "admin" <include refid="search"></include>
	</select>

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<select id="detailUser" resultType="vo.UserVO">
		select * from user 
		where id = #{id}
	</select>
	
	<!-- ** insert, update, delete는 return type이 int로 정해져있기 때문에 resultType 없어도 됨 -->
	<insert id="joinUser">
		insert into user values (#{user_number}, #{uploadimg}, #{id}, #{password}, #{user_name}, #{birthday}, #{gender}, #{email}, #{domain}, #{phone})
	</insert>
	
	<update id="updateProfile">
		update user set uploadimg = #{uploadimg}, user_name = #{user_name}, gender = #{gender}, 
		email = #{email}, domain = #{domain}, phone = #{phone}  
		where id = #{id}
	</update>
	
	<update id="updatePassword">
		update user set password = #{password} 
		where id = #{id}
	</update>
	
	<!-- <update id="updateMailKey" parameterType="UserVO">
		update user set mail_key = #{mail_key} 
		where email = #{email} and id = #{id}
	</update> -->

	<delete id="deleteUser">
		delete from user 
		where id = #{id}
	</delete>

</mapper>